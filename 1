/**

	Remember to put "-lnuma" during the compilation: "gcc ... -lnuma"

 */

#include <stdio.h>
#include <unistd.h>
#include <sys/utsname.h>
#include <sys/sysinfo.h>
#include <numa.h>

struct node {
	struct node *prev;
	struct node *next;
	int n;
} *list;

struct utsname unameData; // used to get the kernel version
struct sysinfo sysinfoData;

void showSystemInfo();

int main() {

	showSystemInfo();
	
	char c[5] = {'\0'};
	int value;
	printf("Type numbers.\n");
	do {
		if (scanf("%d", &value) != 1) {
			printf("%c\n", value);
			getchar();
		}
	} while (strcmp(c, "\n\n") != 0);

	return 0;

}

void showSystemInfo() {

	printf("PID: %d \n", getpid()); // ID of the calling process
	printf("PPID: %d \n", getppid()); // ID of the parent of the calling process
	
	uname(&unameData);
	printf("Linux Kernel version: %s\n", unameData.release); // display Linux kernel version
	
	sysinfo(&sysinfoData);
	printf("Memory size: %.2f GB\n", (float) sysinfoData.totalram / 1024000000);

	printf("NUMA nodes: %d\n", numa_num_configured_nodes()); // show the number of NUMA nodes	

}


